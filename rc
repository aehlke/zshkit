# By default, all created elements are rwx______
umask 077

# Accept message from other users
mesg y

# Watch for login/logout
watch=all

function hg_prompt_info {
    hg prompt --angle-brackets "\
< on %{$fg[magenta]%}<branch>%{$reset_color%}>\
< at %{$fg[yellow]%}<tags|%{$reset_color%}, %{$fg[yellow]%}>%{$reset_color%}>\
%{$fg[green]%}<status|modified|unknown><update>%{$reset_color%}<
patches: <patches|join( → )|pre_applied(%{$fg[yellow]%})|post_applied(%{$reset_color%})|pre_unapplied(%{$fg_bold[black]%})|post_unapplied(%{$reset_color%})>>" 2>/dev/null
}

function prompt_char {
    git branch >/dev/null 2>/dev/null && echo '±' && return
    hg root >/dev/null 2>/dev/null && echo '☿' && return
    echo '○'
}

function precmd
{
	# Color for decorations
	local deco="%{${fg_bold[black]}%}"

  	# Change path color given user rights on it
  	if [[ -O "${PWD}" ]]; 
	# owner
	then 
    	local path_color="${fg_no_bold[default]}"
  	elif [[ -w "${PWD}" ]]; 
	# can write
	then
    	local path_color="${fg_no_bold[blue]}"
  	# other
	else 
    	local path_color="${fg_no_bold[red]}"
  	fi

	# Change hostname color on knowm hosts
  	case ${HOST%%.*} in
    	my-Desktop) local host_color="${fg_bold[cyan]}" ;;
    	my-Laptop)  local host_color="${fg_bold[cyan]}" ;;
    	*)          local host_color="${fg_bold[red]}" ;;
  	esac

  	# Display return code when not 0
  	local return_code="%(?..${deco}!%{${fg_no_bold[red]}%}%?${deco}! )"
  	# user@host
  	local user_at_host="%{${fg_bold[red]}%}%n${deco}@%{${host_color}%}%m"
  	# Red # for root, plain % for user
  	local sign="%(!.%{${fg_bold[red]}%}.${deco})%#"
	vcs_info
  	PS1="%T%B${deco}[${path_color}%~${deco}]%b
${return_code}${deco}$(prompt_char) ${vcs_info_msg_0_}$(hg_prompt_info)$(git_prompt_info)%{${reset_color}%} "
}
